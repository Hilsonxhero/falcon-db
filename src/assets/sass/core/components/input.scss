@use "sass:map";

@mixin inset-prepend-border($color) {
  box-shadow: 1px 0 0 0 $color inset, 0 1px 0 0 $color inset,
    0 -1px 0 0 $color inset;
}

@mixin inset-append-border($color) {
  box-shadow: 0 1px 0 0 $color inset, 0 -1px 0 0 $color inset,
    -1px 0 0 0 $color inset;
}

@mixin inset-prepend-input-border($color) {
  box-shadow: 1px 0 0 0 $color inset, 1px 0 0 0 $color, 0 1px 0 0 $color inset,
    0 -1px 0 0 $color inset !important;
}

@mixin inset-append-input-border($color) {
  box-shadow: -1px 0 0 0 $color, -1px 0 0 0 $color inset, 0 1px 0 0 $color inset,
    0 -1px 0 0 $color inset !important;
}

@mixin mixed-input-border($color) {
  box-shadow: 0 0 0 1px $color inset;
}

@include b(textarea) {
}

@include b(textarea) {
  position: relative;
  display: inline-block;
  width: 100%;
  vertical-align: bottom;
  font-size: getCssVar("font-size", "base");
  border-radius: 0.75rem;
  @include e(inner) {
    position: relative;
    display: block;
    resize: vertical;
    line-height: 1.5;
    box-sizing: border-box;
    width: 100%;
    font-size: inherit;
    font-family: inherit;
    outline: none;
    background-image: none;
    -webkit-appearance: none;

    @apply block w-full h-full  text-right transition-all ease-out duration-200 rounded-inherit border-2 px-3 pt-2 text-sm;

    &::placeholder {
    }

    &:hover {
      @include inset-input-border(#{getCssVar("input", "hover-border-color")});
    }

    &:focus {
    }
  }

  & .#{$namespace}-input__count {
    color: getCssVar("color-info");
    background: getCssVar("fill-color", "blank");
    position: absolute;
    font-size: 12px;
    line-height: 14px;
    bottom: 5px;
    right: 10px;
  }

  @include when(disabled) {
    .#{$namespace}-textarea__inner {
      cursor: not-allowed;

      &::placeholder {
      }
    }
  }

  @include when(exceed) {
    .#{$namespace}-textarea__inner {
      border-color: getCssVar("color-danger");
    }

    .#{$namespace}-input__count {
      color: getCssVar("color-danger");
    }
  }
}

@include b(input) {
}

@include b(input) {
  @include css-var-from-global("input-height", "component-size");

  position: relative;
  font-size: getCssVar("font-size", "base");
  display: inline-flex;
  width: 100%;
  outline: 0 !important;
  line-height: getCssVar("input-height");
  box-sizing: border-box;
  @include scroll-bar;

  & .#{$namespace}-input__clear,
  & .#{$namespace}-input__password {
    color: getCssVar("input-icon-color");

    cursor: pointer;

    &:hover {
      color: getCssVar("input-clear-hover-color");
    }
  }

  & .#{$namespace}-input__count {
    height: 100%;
    display: inline-flex;
    align-items: center;
    color: getCssVar("color-info");
    font-size: 12px;

    .#{$namespace}-input__count-inner {
      background: getCssVar("fill-color", "blank");
      line-height: initial;
      display: inline-block;
      padding-left: 8px;
    }
  }

  @include e(wrapper) {
    display: inline-flex;
    flex-grow: 1;
    align-items: center;
    justify-content: center;
    height: 3rem;
    border-radius: 0.75rem;
    background-image: none;
    outline: 0 !important;
    &:hover {
    }

    @include when(focus) {
    }
  }

  @include e(inner) {
    // use map.get as default value for date picker range

    width: 100%;
    flex-grow: 1;
    -webkit-appearance: none;
    font-size: inherit;
    // height: getCssVar("input-inner-height");
    // line-height: getCssVar("input-inner-height");
    padding: 0;
    outline: none;
    background: none;
    @apply block w-full h-full  text-right transition-all ease-out duration-200 rounded-inherit border-2 px-3 text-sm;

    &:focus {
    }

    &::placeholder {
    }

    // override edge default style
    &[type="password"]::-ms-reveal {
      display: none;
    }
  }

  @each $slot in (prefix, suffix) {
    @include e($slot) {
      display: inline-flex;
      white-space: nowrap;
      flex-shrink: 0;
      flex-wrap: nowrap;
      height: 100%;
      text-align: center;

      transition: all getCssVar("transition-duration");
      pointer-events: none;
    }

    @include e(#{$slot}-inner) {
      pointer-events: all;
      display: inline-flex;
      align-items: center;
      justify-content: center;

      @if $slot == prefix {
        > :last-child {
          margin-right: 8px;
        }

        > :first-child {
          &,
          &.#{$namespace}-input__icon {
            margin-left: 0;
          }
        }
      } @else {
        > :first-child {
          margin-left: 8px;
        }
      }
    }
  }

  & .#{$namespace}-input__icon {
    height: inherit;
    line-height: inherit;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all getCssVar("transition-duration");
    margin-left: 8px;
  }

  @include e(validateIcon) {
    pointer-events: none;
  }

  @include when(active) {
    .#{$namespace}-input__wrapper {
    }
  }

  @include when(disabled) {
    cursor: not-allowed;

    .#{$namespace}-input__wrapper {
    }

    .#{$namespace}-input__inner {
      cursor: not-allowed;

      &::placeholder {
      }
    }

    .#{$namespace}-input__icon {
      cursor: not-allowed;
    }
  }

  @include when(exceed) {
    .#{$namespace}-input__wrapper {
      @include mixed-input-border(#{getCssVar("color-danger")});
    }

    .#{$namespace}-input__suffix {
      .#{$namespace}-input__count {
        color: getCssVar("color-danger");
      }
    }
  }

  @each $size in (large, small) {
    @include m($size) {
      @include css-var-from-global("input-height", ("component-size", $size));

      @include e(wrapper) {
      }

      @include e(inner) {
      }
    }
  }
}

@include b(input-group) {
  display: inline-flex;
  width: 100%;
  align-items: stretch;

  @include e((append, prepend)) {
    background-color: getCssVar("fill-color", "light");
    color: getCssVar("color-info");
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-height: 100%;
    border-radius: getCssVar("input-border-radius");
    padding: 0 20px;
    white-space: nowrap;

    &:focus {
    }

    .#{$namespace}-select,
    .#{$namespace}-button {
      display: inline-block;
      margin: 0 -20px;
    }

    button.#{$namespace}-button,
    button.#{$namespace}-button:hover,
    div.#{$namespace}-select .#{$namespace}-input__wrapper,
    div.#{$namespace}-select:hover .#{$namespace}-input__wrapper {
      border-color: transparent;
      background-color: transparent;
      color: inherit;
    }

    .#{$namespace}-button,
    .#{$namespace}-input {
      font-size: inherit;
    }
  }

  @include e(prepend) {
    border-right: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    @include inset-prepend-border(#{getCssVar("input-border-color")});
  }

  @include e(append) {
    border-left: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    @include inset-append-border(#{getCssVar("input-border-color")});
  }

  @include m(prepend) {
    > .#{$namespace}-input__wrapper {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    @include e(prepend) {
      .#{$namespace}-select {
        .#{$namespace}-input {
          .#{$namespace}-input__inner {
            box-shadow: none !important;
          }
          .#{$namespace}-input__wrapper {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            @include inset-prepend-border(#{getCssVar("input-border-color")});
          }
          &.is-focus {
            .#{$namespace}-input__inner {
            }
            .#{$namespace}-input__wrapper {
              z-index: 2;
              &:focus {
                z-index: 2;
              }
            }
          }
        }
        &:hover {
          .#{$namespace}-input__inner {
            box-shadow: none !important;
          }
          .#{$namespace}-input__wrapper {
            z-index: 1;
            @include inset-prepend-input-border(
              getCssVar("input-hover-border-color")
            );
          }
        }
      }
    }
  }

  @include m(append) {
    > .#{$namespace}-input__wrapper {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    @include e(append) {
      .#{$namespace}-select {
        .#{$namespace}-input {
          .#{$namespace}-input__inner {
          }
          .#{$namespace}-input__wrapper {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
            @include inset-append-border(#{getCssVar("input-border-color")});
          }
          &.is-focus {
            .#{$namespace}-input__inner {
            }
            .#{$namespace}-input__wrapper {
              z-index: 2;
            }
          }
        }
        &:hover {
          .#{$namespace}-input__inner {
            box-shadow: none !important;
          }
          .#{$namespace}-input__wrapper {
            z-index: 1;
            @include inset-append-input-border(
              getCssVar("input-hover-border-color")
            );
          }
        }
      }
    }
  }
}
